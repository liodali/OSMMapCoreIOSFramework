name: "Release OSMMapCore"

on:
    push:
      tags:
        - '[0-9]+.[0-9]+.[0-9]+*'
jobs:
  build-deploy-ios:
    name: "Build and Deploy iOS Release"
    runs-on: macos-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: "Set version variable"
        run: |
          RELEASE_VERSION=$(if [[ ${{ github.ref_type }} == "tag" ]]; then echo ${{ github.ref_name }}; else echo ${{ github.sha }}; fi)
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
      
      - name: Install the Apple certificate and provisioning profile
        env:
            BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
            P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
            BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
            KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
            # create variables
            CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
            PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
            KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
  
            # import certificate and provisioning profile from secrets
            echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
            echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
  
            # create temporary keychain
            security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
            security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
            security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
  
            # import certificate to keychain
            security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
            security list-keychain -d user -s $KEYCHAIN_PATH
  
            # apply provisioning profile
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      
      #-PROVUUID=$(security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision | grep -A1 UUID | awk -F'[<>]' '/string/ {print $3}')
      #-echo "PROVUUID=$PROVUUID" >> $GITHUB_ENV
      #- name: "install xcodeproj"
      #  run: gem install xcodeproj
      #- name: "create xcodeproj"
      #  run: ruby create_xproj.rb
      - name: "set permission build.sh"
        run: chmod +x build.sh
      - name: "fix build"
        run: rm -rf ./OSMFlutterFramework.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
      - name: "run build.sh"
        run: ./build.sh ${{env.RELEASE_VERSION}} 
        #env.PROVUUID}}

      - name: "Upload pod"
        uses: actions/upload-artifact@v4
        with:
          name: OSMFlutterFramework-${{ env.RELEASE_VERSION }}
          path: build/pod/
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          make_latest: true
          files:
              build/pod/OSMFlutterFramework-${{ env.RELEASE_VERSION }}
          token: ${{ secrets.TOKEN }}
      - name: Install Cocoapods
        run: gem install cocoapods
      - name: check lint
        run:  pod spec lint --verbose
      - name: Deploy to Cocoapods
        run: |
            set -eo pipefail
            pod trunk push --allow-warnings
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
